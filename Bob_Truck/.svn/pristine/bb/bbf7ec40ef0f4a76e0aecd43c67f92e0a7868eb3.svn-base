//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NManagerResourceModuleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(NManagerResourceModule), typeof(NSingleton<NManagerResourceModule>));
		L.RegFunction("BuildLocalBundleMD5File", BuildLocalBundleMD5File);
		L.RegFunction("CreaterFile", CreaterFile);
		L.RegFunction("GetFileProtocol", GetFileProtocol);
		L.RegFunction("SetRunBundle", SetRunBundle);
		L.RegFunction("TryGetDocumentResourceUrl", TryGetDocumentResourceUrl);
		L.RegFunction("GetResourceFullPath", GetResourceFullPath);
		L.RegFunction("TryGetInAppStreamingUrl", TryGetInAppStreamingUrl);
		L.RegFunction("IsStreamingAssetsExists", IsStreamingAssetsExists);
		L.RegFunction("IsFileExists", IsFileExists);
		L.RegFunction("IsPrsistentDataExists", IsPrsistentDataExists);
		L.RegFunction("LoadSyncFromStreamingAssets", LoadSyncFromStreamingAssets);
		L.RegFunction("WWWReadAllBytes", WWWReadAllBytes);
		L.RegFunction("ReadAllBytes", ReadAllBytes);
		L.RegFunction("RePreLoadManifest", RePreLoadManifest);
		L.RegFunction("LuaLoadBundleAsync", LuaLoadBundleAsync);
		L.RegFunction("LuaLoadBundle", LuaLoadBundle);
		L.RegFunction("LuaLoadBundleMaterial", LuaLoadBundleMaterial);
		L.RegFunction("LuaLoadBundleTexture", LuaLoadBundleTexture);
		L.RegFunction("LoadLocalAssetBundleDataTable", LoadLocalAssetBundleDataTable);
		L.RegFunction("Collect", Collect);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("LoadByQueue", get_LoadByQueue, set_LoadByQueue);
		L.RegVar("ResourceVersion", get_ResourceVersion, set_ResourceVersion);
		L.RegVar("CDNPath", get_CDNPath, set_CDNPath);
		L.RegVar("ResourcePathPriorityType", get_ResourcePathPriorityType, set_ResourcePathPriorityType);
		L.RegVar("RunBundle", get_RunBundle, set_RunBundle);
		L.RegVar("UseLocalBundle", get_UseLocalBundle, set_UseLocalBundle);
		L.RegVar("IsEditorLoadAsset", get_IsEditorLoadAsset, set_IsEditorLoadAsset);
		L.RegVar("EditorProductFullPath", get_EditorProductFullPath, null);
		L.RegVar("EditBundlesPathRelative", get_EditBundlesPathRelative, null);
		L.RegVar("ApplicationPath", get_ApplicationPath, null);
		L.RegVar("ProductPathWithProtocol", get_ProductPathWithProtocol, null);
		L.RegVar("ProductPathWithoutFileProtocol", get_ProductPathWithoutFileProtocol, null);
		L.RegVar("RuntimePlatformDir", get_RuntimePlatformDir, null);
		L.RegVar("ApplicationPersistentDataPath", get_ApplicationPersistentDataPath, null);
		L.RegVar("ApplicationStreamingDataPath", get_ApplicationStreamingDataPath, null);
		L.RegVar("DocumentResourcesPathWithoutFileProtocol", get_DocumentResourcesPathWithoutFileProtocol, null);
		L.RegVar("DocumentResourcesPath", get_DocumentResourcesPath, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BuildLocalBundleMD5File(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			NManagerResourceModule.BuildLocalBundleMD5File();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreaterFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 2);
			string o = NManagerResourceModule.CreaterFile(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFileProtocol(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = NManagerResourceModule.GetFileProtocol();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetRunBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 1);
			NManagerResourceModule.SetRunBundle(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TryGetDocumentResourceUrl(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			string arg0 = ToLua.CheckString(L, 1);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
			string arg2 = null;
			bool o = NManagerResourceModule.TryGetDocumentResourceUrl(arg0, arg1, out arg2);
			LuaDLL.lua_pushboolean(L, o);
			LuaDLL.lua_pushstring(L, arg2);
			return 2;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResourceFullPath(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				string arg2 = null;
				NManagerResourceModule.GetResourceFullPathType o = NManagerResourceModule.GetResourceFullPath(arg0, arg1, out arg2);
				ToLua.Push(L, o);
				LuaDLL.lua_pushstring(L, arg2);
				return 2;
			}
			else if (count == 4)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				string arg2 = null;
				bool arg3 = LuaDLL.luaL_checkboolean(L, 4);
				NManagerResourceModule.GetResourceFullPathType o = NManagerResourceModule.GetResourceFullPath(arg0, arg1, out arg2, arg3);
				ToLua.Push(L, o);
				LuaDLL.lua_pushstring(L, arg2);
				return 2;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: NManagerResourceModule.GetResourceFullPath");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TryGetInAppStreamingUrl(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			string arg0 = ToLua.CheckString(L, 1);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
			string arg2 = null;
			bool o = NManagerResourceModule.TryGetInAppStreamingUrl(arg0, arg1, out arg2);
			LuaDLL.lua_pushboolean(L, o);
			LuaDLL.lua_pushstring(L, arg2);
			return 2;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsStreamingAssetsExists(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			bool o = NManagerResourceModule.IsStreamingAssetsExists(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsFileExists(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			bool o = NManagerResourceModule.IsFileExists(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsPrsistentDataExists(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			bool o = NManagerResourceModule.IsPrsistentDataExists(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadSyncFromStreamingAssets(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			byte[] o = NManagerResourceModule.LoadSyncFromStreamingAssets(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WWWReadAllBytes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			byte[] o = NManagerResourceModule.WWWReadAllBytes(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadAllBytes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			byte[] o = NManagerResourceModule.ReadAllBytes(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RePreLoadManifest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			NManagerResourceModule.RePreLoadManifest();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaLoadBundleAsync(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.GameObject o = NManagerResourceModule.LuaLoadBundleAsync(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				NAssetFileLoader.AssetFileBridgeDelegate arg1 = (NAssetFileLoader.AssetFileBridgeDelegate)ToLua.CheckDelegate<NAssetFileLoader.AssetFileBridgeDelegate>(L, 2);
				UnityEngine.GameObject o = NManagerResourceModule.LuaLoadBundleAsync(arg0, arg1);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: NManagerResourceModule.LuaLoadBundleAsync");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaLoadBundle(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.GameObject o = NManagerResourceModule.LuaLoadBundle(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				NAssetFileLoader.AssetFileBridgeDelegate arg1 = (NAssetFileLoader.AssetFileBridgeDelegate)ToLua.CheckDelegate<NAssetFileLoader.AssetFileBridgeDelegate>(L, 2);
				UnityEngine.GameObject o = NManagerResourceModule.LuaLoadBundle(arg0, arg1);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: NManagerResourceModule.LuaLoadBundle");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaLoadBundleMaterial(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.Material o = NManagerResourceModule.LuaLoadBundleMaterial(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				NAssetFileLoader.AssetFileBridgeDelegate arg1 = (NAssetFileLoader.AssetFileBridgeDelegate)ToLua.CheckDelegate<NAssetFileLoader.AssetFileBridgeDelegate>(L, 2);
				UnityEngine.Material o = NManagerResourceModule.LuaLoadBundleMaterial(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: NManagerResourceModule.LuaLoadBundleMaterial");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaLoadBundleTexture(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.Texture o = NManagerResourceModule.LuaLoadBundleTexture(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				NAssetFileLoader.AssetFileBridgeDelegate arg1 = (NAssetFileLoader.AssetFileBridgeDelegate)ToLua.CheckDelegate<NAssetFileLoader.AssetFileBridgeDelegate>(L, 2);
				UnityEngine.Texture o = NManagerResourceModule.LuaLoadBundleTexture(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: NManagerResourceModule.LuaLoadBundleTexture");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadLocalAssetBundleDataTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			byte[] o = NManagerResourceModule.LoadLocalAssetBundleDataTable();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Collect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			NManagerResourceModule.Collect();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LoadByQueue(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, NManagerResourceModule.LoadByQueue);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResourceVersion(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, NManagerResourceModule.ResourceVersion);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CDNPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, NManagerResourceModule.CDNPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResourcePathPriorityType(IntPtr L)
	{
		try
		{
			ToLua.Push(L, NManagerResourceModule.ResourcePathPriorityType);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RunBundle(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, NManagerResourceModule.RunBundle);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UseLocalBundle(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, NManagerResourceModule.UseLocalBundle);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsEditorLoadAsset(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, NManagerResourceModule.IsEditorLoadAsset);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EditorProductFullPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, NManagerResourceModule.EditorProductFullPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EditBundlesPathRelative(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, NManagerResourceModule.EditBundlesPathRelative);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ApplicationPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, NManagerResourceModule.ApplicationPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ProductPathWithProtocol(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, NManagerResourceModule.ProductPathWithProtocol);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ProductPathWithoutFileProtocol(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, NManagerResourceModule.ProductPathWithoutFileProtocol);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RuntimePlatformDir(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, NManagerResourceModule.RuntimePlatformDir);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ApplicationPersistentDataPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, NManagerResourceModule.ApplicationPersistentDataPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ApplicationStreamingDataPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, NManagerResourceModule.ApplicationStreamingDataPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DocumentResourcesPathWithoutFileProtocol(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, NManagerResourceModule.DocumentResourcesPathWithoutFileProtocol);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DocumentResourcesPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, NManagerResourceModule.DocumentResourcesPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LoadByQueue(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			NManagerResourceModule.LoadByQueue = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ResourceVersion(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			NManagerResourceModule.ResourceVersion = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CDNPath(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			NManagerResourceModule.CDNPath = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ResourcePathPriorityType(IntPtr L)
	{
		try
		{
			NResourcePathPriorityType arg0 = (NResourcePathPriorityType)ToLua.CheckObject(L, 2, typeof(NResourcePathPriorityType));
			NManagerResourceModule.ResourcePathPriorityType = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RunBundle(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			NManagerResourceModule.RunBundle = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UseLocalBundle(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			NManagerResourceModule.UseLocalBundle = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsEditorLoadAsset(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			NManagerResourceModule.IsEditorLoadAsset = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

