//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NUIMsgBoxStaticBlurWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(NUIMsgBoxStaticBlur), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GaussianBlur", GaussianBlur);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("uiTex", get_uiTex, set_uiTex);
		L.RegVar("mat", get_mat, set_mat);
		L.RegVar("DownSampleNum", get_DownSampleNum, set_DownSampleNum);
		L.RegVar("BlurSpreadSize", get_BlurSpreadSize, set_BlurSpreadSize);
		L.RegVar("BlurIterations", get_BlurIterations, set_BlurIterations);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GaussianBlur(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			NUIMsgBoxStaticBlur obj = (NUIMsgBoxStaticBlur)ToLua.CheckObject<NUIMsgBoxStaticBlur>(L, 1);
			obj.GaussianBlur();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uiTex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NUIMsgBoxStaticBlur obj = (NUIMsgBoxStaticBlur)o;
			UITexture ret = obj.uiTex;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uiTex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NUIMsgBoxStaticBlur obj = (NUIMsgBoxStaticBlur)o;
			UnityEngine.Material ret = obj.mat;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mat on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DownSampleNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NUIMsgBoxStaticBlur obj = (NUIMsgBoxStaticBlur)o;
			int ret = obj.DownSampleNum;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DownSampleNum on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BlurSpreadSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NUIMsgBoxStaticBlur obj = (NUIMsgBoxStaticBlur)o;
			float ret = obj.BlurSpreadSize;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BlurSpreadSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BlurIterations(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NUIMsgBoxStaticBlur obj = (NUIMsgBoxStaticBlur)o;
			int ret = obj.BlurIterations;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BlurIterations on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uiTex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NUIMsgBoxStaticBlur obj = (NUIMsgBoxStaticBlur)o;
			UITexture arg0 = (UITexture)ToLua.CheckObject<UITexture>(L, 2);
			obj.uiTex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uiTex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NUIMsgBoxStaticBlur obj = (NUIMsgBoxStaticBlur)o;
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 2);
			obj.mat = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mat on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DownSampleNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NUIMsgBoxStaticBlur obj = (NUIMsgBoxStaticBlur)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.DownSampleNum = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DownSampleNum on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BlurSpreadSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NUIMsgBoxStaticBlur obj = (NUIMsgBoxStaticBlur)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.BlurSpreadSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BlurSpreadSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BlurIterations(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NUIMsgBoxStaticBlur obj = (NUIMsgBoxStaticBlur)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.BlurIterations = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BlurIterations on a nil value");
		}
	}
}

