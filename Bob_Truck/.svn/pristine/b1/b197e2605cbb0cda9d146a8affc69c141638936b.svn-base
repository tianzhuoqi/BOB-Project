//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NManagerNetWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(NManagerNet), typeof(NSingleton<NManagerNet>));
		L.RegFunction("ClearNetMsgCatch", ClearNetMsgCatch);
		L.RegFunction("CreateRpcNet", CreateRpcNet);
		L.RegFunction("StartRpcConnect", StartRpcConnect);
		L.RegFunction("SendLuaNetMsg", SendLuaNetMsg);
		L.RegFunction("CloseAll", CloseAll);
		L.RegFunction("IsConnect", IsConnect);
		L.RegFunction("Close", Close);
		L.RegFunction("Release", Release);
		L.RegFunction("LuaDirectAckNetMsg", LuaDirectAckNetMsg);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearNetMsgCatch(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			NManagerNet obj = (NManagerNet)ToLua.CheckObject<NManagerNet>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ClearNetMsgCatch(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateRpcNet(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			NManagerNet obj = (NManagerNet)ToLua.CheckObject<NManagerNet>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.CreateRpcNet(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartRpcConnect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			NManagerNet obj = (NManagerNet)ToLua.CheckObject<NManagerNet>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			bool o = obj.StartRpcConnect(arg0, arg1, arg2);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendLuaNetMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			NManagerNet obj = (NManagerNet)ToLua.CheckObject<NManagerNet>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			short arg1 = (short)LuaDLL.luaL_checknumber(L, 3);
			LuaByteBuffer arg2 = new LuaByteBuffer(ToLua.CheckByteBuffer(L, 4));
			obj.SendLuaNetMsg(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			NManagerNet obj = (NManagerNet)ToLua.CheckObject<NManagerNet>(L, 1);
			obj.CloseAll();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsConnect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			NManagerNet obj = (NManagerNet)ToLua.CheckObject<NManagerNet>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.IsConnect(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Close(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			NManagerNet obj = (NManagerNet)ToLua.CheckObject<NManagerNet>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Close(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Release(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			NManagerNet obj = (NManagerNet)ToLua.CheckObject<NManagerNet>(L, 1);
			obj.Release();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaDirectAckNetMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			NManagerNet obj = (NManagerNet)ToLua.CheckObject<NManagerNet>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			short arg1 = (short)LuaDLL.luaL_checknumber(L, 3);
			LuaByteBuffer arg2 = new LuaByteBuffer(ToLua.CheckByteBuffer(L, 4));
			obj.LuaDirectAckNetMsg(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

