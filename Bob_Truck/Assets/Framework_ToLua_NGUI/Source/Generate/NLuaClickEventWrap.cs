//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NLuaClickEventWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(NLuaClickEvent), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AddClick", AddClick);
		L.RegFunction("Add3DClick", Add3DClick);
		L.RegFunction("AddPress", AddPress);
		L.RegFunction("Add3DPress", Add3DPress);
		L.RegFunction("AddLongPress", AddLongPress);
		L.RegFunction("Get", Get);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddClick(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				NLuaClickEvent obj = (NLuaClickEvent)ToLua.CheckObject<NLuaClickEvent>(L, 1);
				LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.AddClick(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				NLuaClickEvent obj = (NLuaClickEvent)ToLua.CheckObject<NLuaClickEvent>(L, 1);
				LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
				obj.AddClick(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: NLuaClickEvent.AddClick");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Add3DClick(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				NLuaClickEvent obj = (NLuaClickEvent)ToLua.CheckObject<NLuaClickEvent>(L, 1);
				LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.Add3DClick(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				NLuaClickEvent obj = (NLuaClickEvent)ToLua.CheckObject<NLuaClickEvent>(L, 1);
				LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				UnityEngine.Camera arg2 = (UnityEngine.Camera)ToLua.CheckObject(L, 4, typeof(UnityEngine.Camera));
				obj.Add3DClick(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: NLuaClickEvent.Add3DClick");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddPress(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			NLuaClickEvent obj = (NLuaClickEvent)ToLua.CheckObject<NLuaClickEvent>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddPress(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Add3DPress(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				NLuaClickEvent obj = (NLuaClickEvent)ToLua.CheckObject<NLuaClickEvent>(L, 1);
				LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.Add3DPress(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				NLuaClickEvent obj = (NLuaClickEvent)ToLua.CheckObject<NLuaClickEvent>(L, 1);
				LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				UnityEngine.Camera arg2 = (UnityEngine.Camera)ToLua.CheckObject(L, 4, typeof(UnityEngine.Camera));
				obj.Add3DPress(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: NLuaClickEvent.Add3DPress");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddLongPress(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			NLuaClickEvent obj = (NLuaClickEvent)ToLua.CheckObject<NLuaClickEvent>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			obj.AddLongPress(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Get(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			NLuaClickEvent o = NLuaClickEvent.Get(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

