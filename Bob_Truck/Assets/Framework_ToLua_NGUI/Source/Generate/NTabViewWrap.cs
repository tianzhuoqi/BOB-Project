//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NTabViewWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(NTabView), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GetTabList", GetTabList);
		L.RegFunction("GetTab", GetTab);
		L.RegFunction("GetTabItemList", GetTabItemList);
		L.RegFunction("GetTabItem", GetTabItem);
		L.RegFunction("OpenTabItem", OpenTabItem);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("TabCount", get_TabCount, null);
		L.RegVar("CurrentIndex", get_CurrentIndex, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTabList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			NTabView obj = (NTabView)ToLua.CheckObject<NTabView>(L, 1);
			System.Collections.Generic.List<UnityEngine.Transform> o = obj.GetTabList();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTab(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			NTabView obj = (NTabView)ToLua.CheckObject<NTabView>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Transform o = obj.GetTab(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTabItemList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			NTabView obj = (NTabView)ToLua.CheckObject<NTabView>(L, 1);
			System.Collections.Generic.List<NLuaTabItemWidget> o = obj.GetTabItemList();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTabItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			NTabView obj = (NTabView)ToLua.CheckObject<NTabView>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			NLuaTabItemWidget o = obj.GetTabItem(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenTabItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			NTabView obj = (NTabView)ToLua.CheckObject<NTabView>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.OpenTabItem(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TabCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NTabView obj = (NTabView)o;
			int ret = obj.TabCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TabCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurrentIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NTabView obj = (NTabView)o;
			int ret = obj.CurrentIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CurrentIndex on a nil value");
		}
	}
}

